name: Docker image build
run-name: 'Docker image build - ${{ github.event_name }} - "sed"-ing? ${{ github.event.inputs.sed }}'

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      sed:
        description: 'Use sed in Dockerfile?'
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.new_tag.outputs.date }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Create tag
        id: new_tag
        run: echo "date=test-$(date +%s)" >> $GITHUB_OUTPUT

      - name: Update Dockerfile
        if: github.event.inputs.sed == 'true' || github.event_name == 'push'
        run: |
          sed -i "s/ARG something.*/$(grep 'ARG something' docker_vars)/" Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: dummy:test-${{ steps.new_tag.outputs.date }}

      - name: Run image
        id: test
        run: |
          touch file2.txt
          docker_so=$(docker run dummy:test-${{ steps.new_tag.outputs.date }})
          echo $docker_so
          echo "docker_so=$docker_so" >> $GITHUB_OUTPUT
          expected="Hello from vars file"
          actual="$docker_so"
          if [ "$expected" = "$actual" ]; then echo "Passed - Expected and got: $expected"; else  echo "ERROR - Expected: $expected" && echo " But was: $actual" && status=1; fi
          if [ -f file.txt ]; then echo "Passed - file.txt exists"; else echo "ERROR - Could not find file.txt" && status=1; fi
          if [ "4/2" = 4/2 ]; then echo "Passed - Yeah, strings are confusing"; else echo 'ERROR - "4/2" is not the same as 4/2.' && status=1; fi
          exit $status

